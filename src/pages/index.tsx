import useLoading from "@/hooks/useLoading";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import upbondServices from "@/libs/upbondEmbed";
import { toast } from "react-toastify";

export default function Home() {
  const upbond = upbondServices.upbond;
  const { isLoading, LoaderDisplay, setLoading } = useLoading();

  const [userData, setUserData] = useState({});
  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);
  const [account, setAccount] = useState<undefined | string[]>(undefined);
  const [jwtDid, setJwtDid] = useState<
    | {
        jwt: string;
        jwtPresentation: string;
      }
    | undefined
  >(undefined);

  const getEmbedDid = async () => {
    const didJwt = await upbond.consent?.getDid();
    console.log(jwtDid); // returns your verifierable credentials & presentation
    setJwtDid(didJwt);
  };

  const login = async () => {
    setLoading(true);
    localStorage.setItem("isLoggedIn", "true");
    try {
      console.log(upbondServices.provider);
      const login = await upbondServices.login();
      if (login?.data !== null) {
        setAccount(login?.accounts);
        setLoading(false);
        localStorage.removeItem("isLoggedIn");
        return;
      }
      setIsLoggedIn(true);
      setLoading(false);
    } catch (error: any) {
      localStorage.removeItem("isLoggedIn");
      toast.error(error.message || "Some error occured");
      setLoading(false);
      console.error(error);
      throw new Error(error);
    }
  };

  useEffect(() => {
    const init = async () => {
      await upbondServices.init();
    };
    if (!upbond.isInitialized) {
      init();
    }
  }, []);

  useEffect(() => {
    if (
      upbondServices.isLoggedIn ||
      localStorage.getItem("isLoggedIn") === "true"
    ) {
      setIsLoggedIn(true);
    } else {
      setIsLoggedIn(false);
    }
  }, []);

  getEmbedDid();

  return (
    <>
      <Head>
        <title>Example DApps with DID</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-[#101827] h-screen text-gray-300">
        {isLoggedIn ? (
          <div className="mx-auto max-w-7xl py-24 px-4 sm:px-6 sm:py-32 lg:px-8">
            <div className="relative overflow-hidden bg-gray-900 shadow-xl py-14 px-12 rounded-2xl">
              <h1 className="max-w-2xl text-2xl font-bold tracking-tight">
                Welcome to Example DID DApps
              </h1>
              <div className="w-full mt-6">
                <div className="w-full flex">
                  <div className="w-full max-w-sm p-3 shadow-sm bg-gray-800 rounded-xl">
                    <h1>Your Decentralized Identifiers</h1>
                    <ul className="text-gray-400 mt-2">
                      <li>email:</li>
                      <li>name:</li>
                      <li>birthday:</li>
                    </ul>
                  </div>
                </div>
                <button
                  onClick={async () => {
                    upbondServices.logout();
                    localStorage.removeItem("isLoggedIn");
                    setIsLoggedIn(false);
                  }}
                  className="rounded-md mt-6 hover:bg-green-600 px-3.5 py-2.5 text-sm font-semibold text-gray-50 shadow-sm bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white"
                >
                  Logout
                </button>
                <svg
                  viewBox="0 0 1024 1024"
                  className="absolute top-1/2 left-1/2 -z-10 h-[64rem] w-[64rem] -translate-x-1/2 [mask-image:radial-gradient(closest-side,white,transparent)]"
                  aria-hidden="true"
                >
                  <circle
                    cx={512}
                    cy={512}
                    r={512}
                    fill="url(#827591b1-ce8c-4110-b064-7cb85a0b1217)"
                    fillOpacity="0.7"
                  />
                  <defs>
                    <radialGradient id="827591b1-ce8c-4110-b064-7cb85a0b1217">
                      <stop stopColor="#7775D6" />
                      <stop offset={1} stopColor="#E935C1" />
                    </radialGradient>
                  </defs>
                </svg>
              </div>
            </div>
          </div>
        ) : (
          <div className="mx-auto max-w-7xl py-24 sm:px-6 sm:py-32 lg:px-8">
            <div className="relative isolate overflow-hidden bg-gray-900 px-6 py-24 text-center shadow-2xl sm:rounded-3xl sm:px-16">
              <h2 className="mx-auto max-w-2xl text-3xl font-bold tracking-tight text-white sm:text-4xl">
                DApps with Decentralized Identifiers
              </h2>
              <p className="mx-auto mt-6 max-w-xl text-lg leading-8 text-gray-300">
                Login to test the DIDI consent management, anjir didi siapa cuk
                wkwk by the way lets go!
              </p>
              <div className="mt-10 flex items-center justify-center gap-x-6">
                <button
                  onClick={async () => login()}
                  className="rounded-md hover:bg-green-600 px-3.5 py-2.5 text-sm font-semibold text-gray-50 shadow-sm bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white"
                >
                  {isLoading ? (
                    <LoaderDisplay size={17} color="#fff" />
                  ) : (
                    "Get started"
                  )}
                </button>
                <a
                  target="_blank"
                  href="https://upbond.io"
                  className="text-sm font-semibold leading-6 text-white"
                >
                  Learn more <span aria-hidden="true">â†’</span>
                </a>
              </div>
              <svg
                viewBox="0 0 1024 1024"
                className="absolute top-1/2 left-1/2 -z-10 h-[64rem] w-[64rem] -translate-x-1/2 [mask-image:radial-gradient(closest-side,white,transparent)]"
                aria-hidden="true"
              >
                <circle
                  cx={512}
                  cy={512}
                  r={512}
                  fill="url(#827591b1-ce8c-4110-b064-7cb85a0b1217)"
                  fillOpacity="0.7"
                />
                <defs>
                  <radialGradient id="827591b1-ce8c-4110-b064-7cb85a0b1217">
                    <stop stopColor="#7775D6" />
                    <stop offset={1} stopColor="#E935C1" />
                  </radialGradient>
                </defs>
              </svg>
            </div>
          </div>
        )}
        <div className="w-full flex justify-center">
          <img
            src={"https://i.ibb.co/JkkMJ1d/1574.png"}
            alt="upbondlogo"
            width={100}
            height={100}
          />
        </div>
      </main>
    </>
  );
}
