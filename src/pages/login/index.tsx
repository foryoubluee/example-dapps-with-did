import useLoading from "@/hooks/useLoading";
import Head from "next/head";
import { useEffect, useState } from "react";
import upbondServices from "@/libs/upbondEmbed";
import { useRouter } from "next/router";

export default function LoginPage() {
  const upbond = upbondServices.upbond;
  const { isLoading, LoaderDisplay, setLoading } = useLoading();
  const { push: navigate } = useRouter();

  const [jwtDid, setJwtDid] = useState<any>(undefined);
  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);
  const [userDidData, setUserDidData] = useState<string | undefined>();
  const [account, setAccount] = useState<undefined | string[]>(undefined);

  const login = async () => {
    setLoading(true);
    try {
      const loginRes = await upbondServices.login();

      if (loginRes?.data !== null) {
        console.log("masuk login data cuk", upbond.isLoggedIn);
        setAccount(loginRes?.accounts);
        localStorage.setItem("isLoggedIn", "true");
        upbondServices.isLoggedIn = true;
        setIsLoggedIn(true);
        setLoading(false);
        return;
      }

      console.log("login data", loginRes.data);
    } catch (error: any) {
      localStorage.removeItem("isLoggedIn");
      setLoading(false);
      console.error(error);
      throw new Error(error);
    }
  };

  useEffect(() => {
    const init = async () => {
      await upbondServices.init();
    };
    if (!upbond.isInitialized) {
      init();
    }
  }, []);

  useEffect(() => {
    const relog = async () => {
      await login();
    };
    if (upbond.isLoggedIn || localStorage.getItem("isLoggedIn") === "true") {
      setIsLoggedIn(true);
      localStorage.setItem("isLoggedIn", "true");
      navigate("/");
    } else {
      setIsLoggedIn(false);
      if (
        upbond.isInitialized === false &&
        localStorage.getItem("isLoggedIn") === "true"
      ) {
        relog();
        setIsLoggedIn(true);
      }
    }
  }, [isLoggedIn, login]);

  return (
    <>
      <Head>
        <title>Example DApps with DID</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-[#101827] h-screen text-gray-300">
        <div className="mx-auto max-w-7xl py-24 sm:px-6 sm:py-32 lg:px-8">
          <div className="relative isolate overflow-hidden bg-gray-900 px-6 py-24 text-center shadow-2xl sm:rounded-3xl sm:px-16">
            <h2 className="mx-auto max-w-2xl text-3xl font-bold tracking-tight text-white sm:text-4xl">
              DApps with Decentralized Identifiers
            </h2>
            <p className="mx-auto mt-6 max-w-xl text-lg leading-8 text-gray-300">
              Login to test the DIDI consent management, anjir didi siapa cuk
              wkwk by the way lets go!
            </p>
            <div className="mt-10 flex items-center justify-center gap-x-6">
              <button
                onClick={async () => login()}
                className="rounded-md hover:bg-green-600 px-3.5 py-2.5 text-sm font-semibold text-gray-50 shadow-sm bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-white"
              >
                {isLoading ? (
                  <LoaderDisplay size={17} color="#fff" />
                ) : (
                  "Get started"
                )}
              </button>
              <a
                target="_blank"
                href="https://upbond.io"
                className="text-sm font-semibold leading-6 text-white"
              >
                Learn more <span aria-hidden="true">â†’</span>
              </a>
            </div>
            <svg
              viewBox="0 0 1024 1024"
              className="absolute top-1/2 left-1/2 -z-10 h-[64rem] w-[64rem] -translate-x-1/2 [mask-image:radial-gradient(closest-side,white,transparent)]"
              aria-hidden="true"
            >
              <circle
                cx={512}
                cy={512}
                r={512}
                fill="url(#827591b1-ce8c-4110-b064-7cb85a0b1217)"
                fillOpacity="0.7"
              />
              <defs>
                <radialGradient id="827591b1-ce8c-4110-b064-7cb85a0b1217">
                  <stop stopColor="#7775D6" />
                  <stop offset={1} stopColor="#E935C1" />
                </radialGradient>
              </defs>
            </svg>
          </div>
        </div>
        <div className="w-full flex justify-center">
          <img
            src={"https://i.ibb.co/JkkMJ1d/1574.png"}
            alt="upbondlogo"
            width={100}
            height={100}
          />
        </div>
      </main>
    </>
  );
}
